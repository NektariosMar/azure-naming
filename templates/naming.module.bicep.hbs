/**
 * Azure naming module - helps maintaining a consistent naming convention
 * Licensed to use under the MIT license.
 * ----------------------------------------------------------------------------
 * Module repository & documentation: https://github.com/nianton/azure-naming
 * Starter repository template:       https://github.com/nianton/bicep-starter
 * ----------------------------------------------------------------------------
 * Microsoft naming convention best practices
 * https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming
 * ----------------------------------------------------------------------------
 * Generated/built on: {{_metadata.timestamp}}
 */

@description('Optional. It is not recommended that you use prefix by azure you should be using a suffix for your resources.')
param prefix array = []

@description('Optional. It is recommended that you specify a suffix for consistency. Please use only lowercase characters when possible.')
param suffix array = []

@description('Optional. Custom seed value for the unique string to be created -defaults to resourceGroup Id.')
param uniqueSeed string = resourceGroup().id

@description('Optional. Max length of the uniqueness suffix to be added -defaults to 4')
param uniqueLength int = 4

@description('Optional. Use dashes as separator where applicable -defaults to true')
param useDashes bool = true

@description('Optional. Create names using lowercase letters -defaults to true')
param useLowerCase bool = true

var uniquePart = substring(uniqueString(uniqueSeed), 0, uniqueLength)
var delimiter = useDashes ? '-' : ''

var strPrefixJoined = empty(prefix) ? '' : '${replace(replace(replace(string(prefix), '["', ''), '"]', ''), '","', delimiter)}${delimiter}'
var strPrefix = useLowerCase ? toLower(strPrefixJoined) : strPrefixJoined

var strSuffixJoined =  empty(suffix) ? '' : '${delimiter}${replace(replace(replace(string(suffix), '["', ''), '"]', ''), '","', delimiter)}'
var strSuffix = useLowerCase ? toLower(strSuffixJoined) : strSuffixJoined

var placeholder = '[****]'
var nameTemplate = '${strPrefix}${placeholder}${strSuffix}'
var nameUniqueTemplate = '${strPrefix}${placeholder}${strSuffix}${delimiter}${uniquePart}'
var nameSafeTemplate = toLower(replace(nameTemplate, delimiter, ''))
var nameUniqueSafeTemplate = toLower(replace(nameUniqueTemplate, delimiter, ''))

output names object = {
{{#each definitions}}
  {{name}}: {
    name: substring(replace(name{{#unless dashes}}Safe{{/unless}}Template, placeholder, '{{slug}}'), 0, min(length(replace(name{{#unless dashes}}Safe{{/unless}}Template, placeholder, '{{slug}}')), {{length.max}}))
    nameUnique: substring(replace(nameUnique{{#unless dashes}}Safe{{/unless}}Template, placeholder, '{{slug}}'), 0, min(length(replace(nameUnique{{#unless dashes}}Safe{{/unless}}Template, placeholder, '{{slug}}')), {{length.max}}))
    slug: '{{slug}}'
  }
{{/each}}
}

output regionAbbreviations object = {
  {{#each regionAbbreviations}}
    {{@key}}: '{{this}}'
  {{/each}}
}